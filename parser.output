State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: header local_def_list block

    3 local_def_list: ε
    4               | local_def_list local_def

    5 header: "fun" T_id '(' fpar_def_list ')' ':' ret_type

    6 fpar_def_list: ε
    7              | fpar_def fpar_def_rest

    8 fpar_def_rest: ε
    9              | ';' fpar_def fpar_def_rest

   10 fpar_def: "ref" T_id id_rest ':' fpar_type
   11         | T_id id_rest ':' fpar_type

   12 id_rest: ε
   13        | ',' T_id id_rest

   14 data_type: "int"
   15          | "char"

   16 type: data_type int_const_bracket_list

   17 int_const_bracket_list: ε
   18                       | '[' T_int_lit ']' int_const_bracket_list

   19 ret_type: data_type
   20         | "nothing"

   21 fpar_type: data_type '[' ']' int_const_bracket_list
   22          | data_type int_const_bracket_list

   23 local_def: func_def
   24          | func_decl
   25          | var_def

   26 func_decl: header ';'

   27 var_def: "var" T_id id_rest ':' type ';'

   28 stmt: ';'
   29     | l_value "arr" expr ';'
   30     | block
   31     | func_call ';'
   32     | "if" cond "then" stmt "else" stmt
   33     | "if" cond "then" stmt
   34     | "while" cond "do" stmt
   35     | "return" ';'
   36     | "return" expr ';'

   37 block: '{' stmt_list '}'

   38 stmt_list: ε
   39          | stmt_list stmt

   40 func_call: T_id '(' expr_list ')'

   41 expr_list: ε
   42          | expr expr_rest

   43 expr_rest: ε
   44          | ',' expr expr_rest

   45 l_value: T_id
   46        | T_string_lit
   47        | l_value '[' expr ']'

   48 expr: T_int_lit
   49     | T_char_lit
   50     | l_value
   51     | '(' expr ')'
   52     | func_call
   53     | '+' expr
   54     | '-' expr
   55     | expr '+' expr
   56     | expr '-' expr
   57     | expr '*' expr
   58     | expr "div" expr
   59     | expr "mod" expr

   60 cond: '(' cond ')'
   61     | "not" cond
   62     | cond "and" cond
   63     | cond "or" cond
   64     | expr '=' expr
   65     | expr '#' expr
   66     | expr '<' expr
   67     | expr '>' expr
   68     | expr "leq" expr
   69     | expr "geq" expr


Terminals, with rules where they appear

    $end (0) 0
    '#' <char_val> (35) 65
    '(' (40) 5 40 51 60
    ')' (41) 5 40 51 60
    '*' <char_val> (42) 57
    '+' <char_val> (43) 53 55
    ',' (44) 13 44
    '-' <char_val> (45) 54 56
    ':' (58) 5 10 11 27
    ';' (59) 9 26 27 28 29 31 35 36
    '<' <char_val> (60) 66
    '=' <char_val> (61) 64
    '>' <char_val> (62) 67
    '[' (91) 18 21 47
    ']' (93) 18 21 47
    '{' (123) 37
    '}' (125) 37
    error (256)
    "and" (258) 62
    "int" (259) 14
    "then" (260) 32 33
    "char" (261) 15
    "mod" (262) 59
    "var" (263) 27
    "div" (264) 58
    "not" (265) 61
    "while" (266) 34
    "do" (267) 34
    "nothing" (268) 20
    "else" (269) 32
    "or" (270) 63
    "fun" (271) 5
    "ref" (272) 10
    "if" (273) 32 33
    "return" (274) 35 36
    "leq" (275) 68
    "geq" (276) 69
    "arr" (277) 29
    T_id <id> (278) 5 10 11 13 27 40 45
    T_int_lit <int_val> (279) 18 48
    T_char_lit <char_val> (280) 49
    T_string_lit <str_val> (281) 46
    UNARY (282)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 1
        on right: 0
    func_def (46)
        on left: 2
        on right: 1 23
    local_def_list (47)
        on left: 3 4
        on right: 2 4
    header (48)
        on left: 5
        on right: 2 26
    fpar_def_list (49)
        on left: 6 7
        on right: 5
    fpar_def_rest (50)
        on left: 8 9
        on right: 7 9
    fpar_def (51)
        on left: 10 11
        on right: 7 9
    id_rest (52)
        on left: 12 13
        on right: 10 11 13 27
    data_type (53)
        on left: 14 15
        on right: 16 19 21 22
    type (54)
        on left: 16
        on right: 27
    int_const_bracket_list (55)
        on left: 17 18
        on right: 16 18 21 22
    ret_type (56)
        on left: 19 20
        on right: 5
    fpar_type (57)
        on left: 21 22
        on right: 10 11
    local_def (58)
        on left: 23 24 25
        on right: 4
    func_decl (59)
        on left: 26
        on right: 24
    var_def (60)
        on left: 27
        on right: 25
    stmt <stmt> (61)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 32 33 34 39
    block <block> (62)
        on left: 37
        on right: 2 30
    stmt_list <block> (63)
        on left: 38 39
        on right: 37 39
    func_call <funccall> (64)
        on left: 40
        on right: 31 52
    expr_list <vector_expr> (65)
        on left: 41 42
        on right: 40
    expr_rest <vector_expr> (66)
        on left: 43 44
        on right: 42 44
    l_value <abstractlvalue> (67)
        on left: 45 46 47
        on right: 29 47 50
    expr <expr> (68)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 29 36 42 44 47 51 53 54 55 56 57 58 59 64 65 66 67 68 69
    cond <cond> (69)
        on left: 60 61 62 63 64 65 66 67 68 69
        on right: 32 33 34 60 61 62 63


State 0

    0 $accept: • program $end

    "fun"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3
    header    go to state 4


State 1

    5 header: "fun" • T_id '(' fpar_def_list ')' ':' ret_type

    T_id  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: func_def •

    $default  reduce using rule 1 (program)


State 4

    2 func_def: header • local_def_list block

    $default  reduce using rule 3 (local_def_list)

    local_def_list  go to state 7


State 5

    5 header: "fun" T_id • '(' fpar_def_list ')' ':' ret_type

    '('  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    2 func_def: header local_def_list • block
    4 local_def_list: local_def_list • local_def

    "var"  shift, and go to state 9
    "fun"  shift, and go to state 1
    '{'    shift, and go to state 10

    func_def   go to state 11
    header     go to state 12
    local_def  go to state 13
    func_decl  go to state 14
    var_def    go to state 15
    block      go to state 16


State 8

    5 header: "fun" T_id '(' • fpar_def_list ')' ':' ret_type

    "ref"  shift, and go to state 17
    T_id   shift, and go to state 18

    $default  reduce using rule 6 (fpar_def_list)

    fpar_def_list  go to state 19
    fpar_def       go to state 20


State 9

   27 var_def: "var" • T_id id_rest ':' type ';'

    T_id  shift, and go to state 21


State 10

   37 block: '{' • stmt_list '}'

    $default  reduce using rule 38 (stmt_list)

    stmt_list  go to state 22


State 11

   23 local_def: func_def •

    $default  reduce using rule 23 (local_def)


State 12

    2 func_def: header • local_def_list block
   26 func_decl: header • ';'

    ';'  shift, and go to state 23

    $default  reduce using rule 3 (local_def_list)

    local_def_list  go to state 7


State 13

    4 local_def_list: local_def_list local_def •

    $default  reduce using rule 4 (local_def_list)


State 14

   24 local_def: func_decl •

    $default  reduce using rule 24 (local_def)


State 15

   25 local_def: var_def •

    $default  reduce using rule 25 (local_def)


State 16

    2 func_def: header local_def_list block •

    $default  reduce using rule 2 (func_def)


State 17

   10 fpar_def: "ref" • T_id id_rest ':' fpar_type

    T_id  shift, and go to state 24


State 18

   11 fpar_def: T_id • id_rest ':' fpar_type

    ','  shift, and go to state 25

    $default  reduce using rule 12 (id_rest)

    id_rest  go to state 26


State 19

    5 header: "fun" T_id '(' fpar_def_list • ')' ':' ret_type

    ')'  shift, and go to state 27


State 20

    7 fpar_def_list: fpar_def • fpar_def_rest

    ';'  shift, and go to state 28

    $default  reduce using rule 8 (fpar_def_rest)

    fpar_def_rest  go to state 29


State 21

   27 var_def: "var" T_id • id_rest ':' type ';'

    ','  shift, and go to state 25

    $default  reduce using rule 12 (id_rest)

    id_rest  go to state 30


State 22

   37 block: '{' stmt_list • '}'
   39 stmt_list: stmt_list • stmt

    "while"       shift, and go to state 31
    "if"          shift, and go to state 32
    "return"      shift, and go to state 33
    T_id          shift, and go to state 34
    T_string_lit  shift, and go to state 35
    ';'           shift, and go to state 36
    '{'           shift, and go to state 10
    '}'           shift, and go to state 37

    stmt       go to state 38
    block      go to state 39
    func_call  go to state 40
    l_value    go to state 41


State 23

   26 func_decl: header ';' •

    $default  reduce using rule 26 (func_decl)


State 24

   10 fpar_def: "ref" T_id • id_rest ':' fpar_type

    ','  shift, and go to state 25

    $default  reduce using rule 12 (id_rest)

    id_rest  go to state 42


State 25

   13 id_rest: ',' • T_id id_rest

    T_id  shift, and go to state 43


State 26

   11 fpar_def: T_id id_rest • ':' fpar_type

    ':'  shift, and go to state 44


State 27

    5 header: "fun" T_id '(' fpar_def_list ')' • ':' ret_type

    ':'  shift, and go to state 45


State 28

    9 fpar_def_rest: ';' • fpar_def fpar_def_rest

    "ref"  shift, and go to state 17
    T_id   shift, and go to state 18

    fpar_def  go to state 46


State 29

    7 fpar_def_list: fpar_def fpar_def_rest •

    $default  reduce using rule 7 (fpar_def_list)


State 30

   27 var_def: "var" T_id id_rest • ':' type ';'

    ':'  shift, and go to state 47


State 31

   34 stmt: "while" • cond "do" stmt

    "not"         shift, and go to state 48
    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 56
    cond       go to state 57


State 32

   32 stmt: "if" • cond "then" stmt "else" stmt
   33     | "if" • cond "then" stmt

    "not"         shift, and go to state 48
    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 56
    cond       go to state 58


State 33

   35 stmt: "return" • ';'
   36     | "return" • expr ';'

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59
    ';'           shift, and go to state 60

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 61


State 34

   40 func_call: T_id • '(' expr_list ')'
   45 l_value: T_id •

    '('  shift, and go to state 62

    $default  reduce using rule 45 (l_value)


State 35

   46 l_value: T_string_lit •

    $default  reduce using rule 46 (l_value)


State 36

   28 stmt: ';' •

    $default  reduce using rule 28 (stmt)


State 37

   37 block: '{' stmt_list '}' •

    $default  reduce using rule 37 (block)


State 38

   39 stmt_list: stmt_list stmt •

    $default  reduce using rule 39 (stmt_list)


State 39

   30 stmt: block •

    $default  reduce using rule 30 (stmt)


State 40

   31 stmt: func_call • ';'

    ';'  shift, and go to state 63


State 41

   29 stmt: l_value • "arr" expr ';'
   47 l_value: l_value • '[' expr ']'

    "arr"  shift, and go to state 64
    '['    shift, and go to state 65


State 42

   10 fpar_def: "ref" T_id id_rest • ':' fpar_type

    ':'  shift, and go to state 66


State 43

   13 id_rest: ',' T_id • id_rest

    ','  shift, and go to state 25

    $default  reduce using rule 12 (id_rest)

    id_rest  go to state 67


State 44

   11 fpar_def: T_id id_rest ':' • fpar_type

    "int"   shift, and go to state 68
    "char"  shift, and go to state 69

    data_type  go to state 70
    fpar_type  go to state 71


State 45

    5 header: "fun" T_id '(' fpar_def_list ')' ':' • ret_type

    "int"      shift, and go to state 68
    "char"     shift, and go to state 69
    "nothing"  shift, and go to state 72

    data_type  go to state 73
    ret_type   go to state 74


State 46

    9 fpar_def_rest: ';' fpar_def • fpar_def_rest

    ';'  shift, and go to state 28

    $default  reduce using rule 8 (fpar_def_rest)

    fpar_def_rest  go to state 75


State 47

   27 var_def: "var" T_id id_rest ':' • type ';'

    "int"   shift, and go to state 68
    "char"  shift, and go to state 69

    data_type  go to state 76
    type       go to state 77


State 48

   61 cond: "not" • cond

    "not"         shift, and go to state 48
    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 56
    cond       go to state 78


State 49

   48 expr: T_int_lit •

    $default  reduce using rule 48 (expr)


State 50

   49 expr: T_char_lit •

    $default  reduce using rule 49 (expr)


State 51

   53 expr: '+' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 79


State 52

   54 expr: '-' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 80


State 53

   51 expr: '(' • expr ')'
   60 cond: '(' • cond ')'

    "not"         shift, and go to state 48
    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 81
    cond       go to state 82


State 54

   52 expr: func_call •

    $default  reduce using rule 52 (expr)


State 55

   47 l_value: l_value • '[' expr ']'
   50 expr: l_value •

    '['  shift, and go to state 65

    $default  reduce using rule 50 (expr)


State 56

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   64 cond: expr • '=' expr
   65     | expr • '#' expr
   66     | expr • '<' expr
   67     | expr • '>' expr
   68     | expr • "leq" expr
   69     | expr • "geq" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    "leq"  shift, and go to state 85
    "geq"  shift, and go to state 86
    '='    shift, and go to state 87
    '#'    shift, and go to state 88
    '>'    shift, and go to state 89
    '<'    shift, and go to state 90
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93


State 57

   34 stmt: "while" cond • "do" stmt
   62 cond: cond • "and" cond
   63     | cond • "or" cond

    "and"  shift, and go to state 94
    "do"   shift, and go to state 95
    "or"   shift, and go to state 96


State 58

   32 stmt: "if" cond • "then" stmt "else" stmt
   33     | "if" cond • "then" stmt
   62 cond: cond • "and" cond
   63     | cond • "or" cond

    "and"   shift, and go to state 94
    "then"  shift, and go to state 97
    "or"    shift, and go to state 96


State 59

   51 expr: '(' • expr ')'

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 98


State 60

   35 stmt: "return" ';' •

    $default  reduce using rule 35 (stmt)


State 61

   36 stmt: "return" expr • ';'
   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ';'    shift, and go to state 99


State 62

   40 func_call: T_id '(' • expr_list ')'

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    $default  reduce using rule 41 (expr_list)

    func_call  go to state 54
    expr_list  go to state 100
    l_value    go to state 55
    expr       go to state 101


State 63

   31 stmt: func_call ';' •

    $default  reduce using rule 31 (stmt)


State 64

   29 stmt: l_value "arr" • expr ';'

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 102


State 65

   47 l_value: l_value '[' • expr ']'

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 103


State 66

   10 fpar_def: "ref" T_id id_rest ':' • fpar_type

    "int"   shift, and go to state 68
    "char"  shift, and go to state 69

    data_type  go to state 70
    fpar_type  go to state 104


State 67

   13 id_rest: ',' T_id id_rest •

    $default  reduce using rule 13 (id_rest)


State 68

   14 data_type: "int" •

    $default  reduce using rule 14 (data_type)


State 69

   15 data_type: "char" •

    $default  reduce using rule 15 (data_type)


State 70

   21 fpar_type: data_type • '[' ']' int_const_bracket_list
   22          | data_type • int_const_bracket_list

    '['  shift, and go to state 105

    $default  reduce using rule 17 (int_const_bracket_list)

    int_const_bracket_list  go to state 106


State 71

   11 fpar_def: T_id id_rest ':' fpar_type •

    $default  reduce using rule 11 (fpar_def)


State 72

   20 ret_type: "nothing" •

    $default  reduce using rule 20 (ret_type)


State 73

   19 ret_type: data_type •

    $default  reduce using rule 19 (ret_type)


State 74

    5 header: "fun" T_id '(' fpar_def_list ')' ':' ret_type •

    $default  reduce using rule 5 (header)


State 75

    9 fpar_def_rest: ';' fpar_def fpar_def_rest •

    $default  reduce using rule 9 (fpar_def_rest)


State 76

   16 type: data_type • int_const_bracket_list

    '['  shift, and go to state 107

    $default  reduce using rule 17 (int_const_bracket_list)

    int_const_bracket_list  go to state 108


State 77

   27 var_def: "var" T_id id_rest ':' type • ';'

    ';'  shift, and go to state 109


State 78

   61 cond: "not" cond •
   62     | cond • "and" cond
   63     | cond • "or" cond

    $default  reduce using rule 61 (cond)


State 79

   53 expr: '+' expr •
   55     | expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    $default  reduce using rule 53 (expr)


State 80

   54 expr: '-' expr •
   55     | expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    $default  reduce using rule 54 (expr)


State 81

   51 expr: '(' expr • ')'
   55     | expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   64 cond: expr • '=' expr
   65     | expr • '#' expr
   66     | expr • '<' expr
   67     | expr • '>' expr
   68     | expr • "leq" expr
   69     | expr • "geq" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    "leq"  shift, and go to state 85
    "geq"  shift, and go to state 86
    '='    shift, and go to state 87
    '#'    shift, and go to state 88
    '>'    shift, and go to state 89
    '<'    shift, and go to state 90
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ')'    shift, and go to state 110


State 82

   60 cond: '(' cond • ')'
   62     | cond • "and" cond
   63     | cond • "or" cond

    "and"  shift, and go to state 94
    "or"   shift, and go to state 96
    ')'    shift, and go to state 111


State 83

   59 expr: expr "mod" • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 112


State 84

   58 expr: expr "div" • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 113


State 85

   68 cond: expr "leq" • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 114


State 86

   69 cond: expr "geq" • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 115


State 87

   64 cond: expr '=' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 116


State 88

   65 cond: expr '#' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 117


State 89

   67 cond: expr '>' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 118


State 90

   66 cond: expr '<' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 119


State 91

   55 expr: expr '+' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 120


State 92

   56 expr: expr '-' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 121


State 93

   57 expr: expr '*' • expr

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 122


State 94

   62 cond: cond "and" • cond

    "not"         shift, and go to state 48
    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 56
    cond       go to state 123


State 95

   34 stmt: "while" cond "do" • stmt

    "while"       shift, and go to state 31
    "if"          shift, and go to state 32
    "return"      shift, and go to state 33
    T_id          shift, and go to state 34
    T_string_lit  shift, and go to state 35
    ';'           shift, and go to state 36
    '{'           shift, and go to state 10

    stmt       go to state 124
    block      go to state 39
    func_call  go to state 40
    l_value    go to state 41


State 96

   63 cond: cond "or" • cond

    "not"         shift, and go to state 48
    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 53

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 56
    cond       go to state 125


State 97

   32 stmt: "if" cond "then" • stmt "else" stmt
   33     | "if" cond "then" • stmt

    "while"       shift, and go to state 31
    "if"          shift, and go to state 32
    "return"      shift, and go to state 33
    T_id          shift, and go to state 34
    T_string_lit  shift, and go to state 35
    ';'           shift, and go to state 36
    '{'           shift, and go to state 10

    stmt       go to state 126
    block      go to state 39
    func_call  go to state 40
    l_value    go to state 41


State 98

   51 expr: '(' expr • ')'
   55     | expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ')'    shift, and go to state 110


State 99

   36 stmt: "return" expr ';' •

    $default  reduce using rule 36 (stmt)


State 100

   40 func_call: T_id '(' expr_list • ')'

    ')'  shift, and go to state 127


State 101

   42 expr_list: expr • expr_rest
   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ','    shift, and go to state 128

    $default  reduce using rule 43 (expr_rest)

    expr_rest  go to state 129


State 102

   29 stmt: l_value "arr" expr • ';'
   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ';'    shift, and go to state 130


State 103

   47 l_value: l_value '[' expr • ']'
   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ']'    shift, and go to state 131


State 104

   10 fpar_def: "ref" T_id id_rest ':' fpar_type •

    $default  reduce using rule 10 (fpar_def)


State 105

   18 int_const_bracket_list: '[' • T_int_lit ']' int_const_bracket_list
   21 fpar_type: data_type '[' • ']' int_const_bracket_list

    T_int_lit  shift, and go to state 132
    ']'        shift, and go to state 133


State 106

   22 fpar_type: data_type int_const_bracket_list •

    $default  reduce using rule 22 (fpar_type)


State 107

   18 int_const_bracket_list: '[' • T_int_lit ']' int_const_bracket_list

    T_int_lit  shift, and go to state 132


State 108

   16 type: data_type int_const_bracket_list •

    $default  reduce using rule 16 (type)


State 109

   27 var_def: "var" T_id id_rest ':' type ';' •

    $default  reduce using rule 27 (var_def)


State 110

   51 expr: '(' expr ')' •

    $default  reduce using rule 51 (expr)


State 111

   60 cond: '(' cond ')' •

    $default  reduce using rule 60 (cond)


State 112

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   59     | expr "mod" expr •

    $default  reduce using rule 59 (expr)


State 113

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   58     | expr "div" expr •
   59     | expr • "mod" expr

    $default  reduce using rule 58 (expr)


State 114

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   68 cond: expr "leq" expr •

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93

    $default  reduce using rule 68 (cond)


State 115

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   69 cond: expr "geq" expr •

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93

    $default  reduce using rule 69 (cond)


State 116

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   64 cond: expr '=' expr •

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93

    $default  reduce using rule 64 (cond)


State 117

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   65 cond: expr '#' expr •

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93

    $default  reduce using rule 65 (cond)


State 118

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   67 cond: expr '>' expr •

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93

    $default  reduce using rule 67 (cond)


State 119

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr
   66 cond: expr '<' expr •

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93

    $default  reduce using rule 66 (cond)


State 120

   55 expr: expr • '+' expr
   55     | expr '+' expr •
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '*'    shift, and go to state 93

    $default  reduce using rule 55 (expr)


State 121

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   56     | expr '-' expr •
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '*'    shift, and go to state 93

    $default  reduce using rule 56 (expr)


State 122

   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   57     | expr '*' expr •
   58     | expr • "div" expr
   59     | expr • "mod" expr

    $default  reduce using rule 57 (expr)


State 123

   62 cond: cond • "and" cond
   62     | cond "and" cond •
   63     | cond • "or" cond

    $default  reduce using rule 62 (cond)


State 124

   34 stmt: "while" cond "do" stmt •

    $default  reduce using rule 34 (stmt)


State 125

   62 cond: cond • "and" cond
   63     | cond • "or" cond
   63     | cond "or" cond •

    "and"  shift, and go to state 94

    $default  reduce using rule 63 (cond)


State 126

   32 stmt: "if" cond "then" stmt • "else" stmt
   33     | "if" cond "then" stmt •

    "else"  shift, and go to state 134

    "else"    [reduce using rule 33 (stmt)]
    $default  reduce using rule 33 (stmt)


State 127

   40 func_call: T_id '(' expr_list ')' •

    $default  reduce using rule 40 (func_call)


State 128

   44 expr_rest: ',' • expr expr_rest

    T_id          shift, and go to state 34
    T_int_lit     shift, and go to state 49
    T_char_lit    shift, and go to state 50
    T_string_lit  shift, and go to state 35
    '+'           shift, and go to state 51
    '-'           shift, and go to state 52
    '('           shift, and go to state 59

    func_call  go to state 54
    l_value    go to state 55
    expr       go to state 135


State 129

   42 expr_list: expr expr_rest •

    $default  reduce using rule 42 (expr_list)


State 130

   29 stmt: l_value "arr" expr ';' •

    $default  reduce using rule 29 (stmt)


State 131

   47 l_value: l_value '[' expr ']' •

    $default  reduce using rule 47 (l_value)


State 132

   18 int_const_bracket_list: '[' T_int_lit • ']' int_const_bracket_list

    ']'  shift, and go to state 136


State 133

   21 fpar_type: data_type '[' ']' • int_const_bracket_list

    '['  shift, and go to state 107

    $default  reduce using rule 17 (int_const_bracket_list)

    int_const_bracket_list  go to state 137


State 134

   32 stmt: "if" cond "then" stmt "else" • stmt

    "while"       shift, and go to state 31
    "if"          shift, and go to state 32
    "return"      shift, and go to state 33
    T_id          shift, and go to state 34
    T_string_lit  shift, and go to state 35
    ';'           shift, and go to state 36
    '{'           shift, and go to state 10

    stmt       go to state 138
    block      go to state 39
    func_call  go to state 40
    l_value    go to state 41


State 135

   44 expr_rest: ',' expr • expr_rest
   55 expr: expr • '+' expr
   56     | expr • '-' expr
   57     | expr • '*' expr
   58     | expr • "div" expr
   59     | expr • "mod" expr

    "mod"  shift, and go to state 83
    "div"  shift, and go to state 84
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92
    '*'    shift, and go to state 93
    ','    shift, and go to state 128

    $default  reduce using rule 43 (expr_rest)

    expr_rest  go to state 139


State 136

   18 int_const_bracket_list: '[' T_int_lit ']' • int_const_bracket_list

    '['  shift, and go to state 107

    $default  reduce using rule 17 (int_const_bracket_list)

    int_const_bracket_list  go to state 140


State 137

   21 fpar_type: data_type '[' ']' int_const_bracket_list •

    $default  reduce using rule 21 (fpar_type)


State 138

   32 stmt: "if" cond "then" stmt "else" stmt •

    $default  reduce using rule 32 (stmt)


State 139

   44 expr_rest: ',' expr expr_rest •

    $default  reduce using rule 44 (expr_rest)


State 140

   18 int_const_bracket_list: '[' T_int_lit ']' int_const_bracket_list •

    $default  reduce using rule 18 (int_const_bracket_list)
