State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: header local_def_list block

    3 local_def_list: ε
    4               | local_def_list local_def

    5 header: "fun" T_id '(' fpar_def_list ')' ':' ret_type

    6 fpar_def_list: ε
    7              | fpar_def_rest fpar_def

    8 fpar_def_rest: ε
    9              | fpar_def_rest fpar_def ';'

   10 fpar_def: "ref" id_rest T_id ':' fpar_type
   11         | id_rest T_id ':' fpar_type

   12 id_rest: ε
   13        | id_rest T_id ','

   14 data_type: "int"
   15          | "char"

   16 type: data_type int_const_bracket_list_var

   17 int_const_bracket_list_var: ε
   18                           | int_const_bracket_list_var '[' T_int_lit ']'

   19 ret_type: data_type
   20         | "nothing"

   21 int_const_bracket_list: ']'
   22                       | T_int_lit ']'
   23                       | int_const_bracket_list '[' T_int_lit ']'

   24 fpar_type: data_type
   25          | data_type '[' int_const_bracket_list

   26 local_def: func_def
   27          | func_decl
   28          | var_def

   29 func_decl: header ';'

   30 var_def: "var" id_rest T_id ':' type ';'

   31 stmt: ';'
   32     | l_value "arr" expr ';'
   33     | block
   34     | func_call ';'
   35     | "if" cond "then" stmt "else" stmt
   36     | "if" cond "then" stmt
   37     | "while" cond "do" stmt
   38     | "return" ';'
   39     | "return" expr ';'

   40 block: '{' stmt_list '}'

   41 stmt_list: ε
   42          | stmt_list stmt

   43 func_call: T_id '(' expr_list ')'

   44 expr_list: ε
   45          | expr_rest expr

   46 expr_rest: ε
   47          | expr_rest expr ','

   48 l_value: T_id
   49        | T_string_lit
   50        | l_value '[' expr ']'

   51 expr: T_int_lit
   52     | T_char_lit
   53     | l_value
   54     | '(' expr ')'
   55     | func_call
   56     | '+' expr
   57     | '-' expr
   58     | expr '+' expr
   59     | expr '-' expr
   60     | expr '*' expr
   61     | expr "div" expr
   62     | expr "mod" expr

   63 cond: '(' cond ')'
   64     | "not" cond
   65     | cond "and" cond
   66     | cond "or" cond
   67     | expr '=' expr
   68     | expr '#' expr
   69     | expr '<' expr
   70     | expr '>' expr
   71     | expr "leq" expr
   72     | expr "geq" expr


Terminals, with rules where they appear

    $end (0) 0
    '#' <char_val> (35) 68
    '(' (40) 5 43 54 63
    ')' (41) 5 43 54 63
    '*' <char_val> (42) 60
    '+' <char_val> (43) 56 58
    ',' (44) 13 47
    '-' <char_val> (45) 57 59
    ':' (58) 5 10 11 30
    ';' (59) 9 29 30 31 32 34 38 39
    '<' <char_val> (60) 69
    '=' <char_val> (61) 67
    '>' <char_val> (62) 70
    '[' (91) 18 23 25 50
    ']' (93) 18 21 22 23 50
    '{' (123) 40
    '}' (125) 40
    error (256)
    "and" (258) 65
    "int" (259) 14
    "then" (260) 35 36
    "char" (261) 15
    "mod" (262) 62
    "var" (263) 30
    "div" (264) 61
    "not" (265) 64
    "while" (266) 37
    "do" (267) 37
    "nothing" (268) 20
    "else" (269) 35
    "or" (270) 66
    "fun" (271) 5
    "ref" (272) 10
    "if" (273) 35 36
    "return" (274) 38 39
    "leq" (275) 71
    "geq" (276) 72
    "arr" (277) 32
    T_id <id> (278) 5 10 11 13 30 43 48
    T_int_lit <int_val> (279) 18 22 23 51
    T_char_lit <char_val> (280) 52
    T_string_lit <str_val> (281) 49
    UNARY (282)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 1
        on right: 0
    func_def <funcdef> (46)
        on left: 2
        on right: 1 26
    local_def_list <vector_local_def> (47)
        on left: 3 4
        on right: 2 4
    header <header> (48)
        on left: 5
        on right: 2 29
    fpar_def_list <vector_fpar_def> (49)
        on left: 6 7
        on right: 5
    fpar_def_rest <vector_fpar_def> (50)
        on left: 8 9
        on right: 7 9
    fpar_def <fpar_def> (51)
        on left: 10 11
        on right: 7 9
    id_rest <id_defs> (52)
        on left: 12 13
        on right: 10 11 13 30
    data_type <data_type> (53)
        on left: 14 15
        on right: 16 19 24 25
    type <type> (54)
        on left: 16
        on right: 30
    int_const_bracket_list_var <int_vec> (55)
        on left: 17 18
        on right: 16 18
    ret_type <data_type> (56)
        on left: 19 20
        on right: 5
    int_const_bracket_list <int_vec> (57)
        on left: 21 22 23
        on right: 23 25
    fpar_type <type> (58)
        on left: 24 25
        on right: 10 11
    local_def <localdef> (59)
        on left: 26 27 28
        on right: 4
    func_decl <func_decl> (60)
        on left: 29
        on right: 27
    var_def <var_def> (61)
        on left: 30
        on right: 28
    stmt <stmt> (62)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 35 36 37 42
    block <block> (63)
        on left: 40
        on right: 2 33
    stmt_list <block> (64)
        on left: 41 42
        on right: 40 42
    func_call <funccall> (65)
        on left: 43
        on right: 34 55
    expr_list <vector_expr> (66)
        on left: 44 45
        on right: 43
    expr_rest <vector_expr> (67)
        on left: 46 47
        on right: 45 47
    l_value <abstractlvalue> (68)
        on left: 48 49 50
        on right: 32 50 53
    expr <expr> (69)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 32 39 45 47 50 54 56 57 58 59 60 61 62 67 68 69 70 71 72
    cond <cond> (70)
        on left: 63 64 65 66 67 68 69 70 71 72
        on right: 35 36 37 63 64 65 66


State 0

    0 $accept: • program $end

    "fun"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3
    header    go to state 4


State 1

    5 header: "fun" • T_id '(' fpar_def_list ')' ':' ret_type

    T_id  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: func_def •

    $default  reduce using rule 1 (program)


State 4

    2 func_def: header • local_def_list block

    $default  reduce using rule 3 (local_def_list)

    local_def_list  go to state 7


State 5

    5 header: "fun" T_id • '(' fpar_def_list ')' ':' ret_type

    '('  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    2 func_def: header local_def_list • block
    4 local_def_list: local_def_list • local_def

    "var"  shift, and go to state 9
    "fun"  shift, and go to state 1
    '{'    shift, and go to state 10

    func_def   go to state 11
    header     go to state 12
    local_def  go to state 13
    func_decl  go to state 14
    var_def    go to state 15
    block      go to state 16


State 8

    5 header: "fun" T_id '(' • fpar_def_list ')' ':' ret_type

    ')'       reduce using rule 6 (fpar_def_list)
    $default  reduce using rule 8 (fpar_def_rest)

    fpar_def_list  go to state 17
    fpar_def_rest  go to state 18


State 9

   30 var_def: "var" • id_rest T_id ':' type ';'

    $default  reduce using rule 12 (id_rest)

    id_rest  go to state 19


State 10

   40 block: '{' • stmt_list '}'

    $default  reduce using rule 41 (stmt_list)

    stmt_list  go to state 20


State 11

   26 local_def: func_def •

    $default  reduce using rule 26 (local_def)


State 12

    2 func_def: header • local_def_list block
   29 func_decl: header • ';'

    ';'  shift, and go to state 21

    $default  reduce using rule 3 (local_def_list)

    local_def_list  go to state 7


State 13

    4 local_def_list: local_def_list local_def •

    $default  reduce using rule 4 (local_def_list)


State 14

   27 local_def: func_decl •

    $default  reduce using rule 27 (local_def)


State 15

   28 local_def: var_def •

    $default  reduce using rule 28 (local_def)


State 16

    2 func_def: header local_def_list block •

    $default  reduce using rule 2 (func_def)


State 17

    5 header: "fun" T_id '(' fpar_def_list • ')' ':' ret_type

    ')'  shift, and go to state 22


State 18

    7 fpar_def_list: fpar_def_rest • fpar_def
    9 fpar_def_rest: fpar_def_rest • fpar_def ';'

    "ref"  shift, and go to state 23

    $default  reduce using rule 12 (id_rest)

    fpar_def  go to state 24
    id_rest   go to state 25


State 19

   13 id_rest: id_rest • T_id ','
   30 var_def: "var" id_rest • T_id ':' type ';'

    T_id  shift, and go to state 26


State 20

   40 block: '{' stmt_list • '}'
   42 stmt_list: stmt_list • stmt

    "while"       shift, and go to state 27
    "if"          shift, and go to state 28
    "return"      shift, and go to state 29
    T_id          shift, and go to state 30
    T_string_lit  shift, and go to state 31
    ';'           shift, and go to state 32
    '{'           shift, and go to state 10
    '}'           shift, and go to state 33

    stmt       go to state 34
    block      go to state 35
    func_call  go to state 36
    l_value    go to state 37


State 21

   29 func_decl: header ';' •

    $default  reduce using rule 29 (func_decl)


State 22

    5 header: "fun" T_id '(' fpar_def_list ')' • ':' ret_type

    ':'  shift, and go to state 38


State 23

   10 fpar_def: "ref" • id_rest T_id ':' fpar_type

    $default  reduce using rule 12 (id_rest)

    id_rest  go to state 39


State 24

    7 fpar_def_list: fpar_def_rest fpar_def •
    9 fpar_def_rest: fpar_def_rest fpar_def • ';'

    ';'  shift, and go to state 40

    $default  reduce using rule 7 (fpar_def_list)


State 25

   11 fpar_def: id_rest • T_id ':' fpar_type
   13 id_rest: id_rest • T_id ','

    T_id  shift, and go to state 41


State 26

   13 id_rest: id_rest T_id • ','
   30 var_def: "var" id_rest T_id • ':' type ';'

    ':'  shift, and go to state 42
    ','  shift, and go to state 43


State 27

   37 stmt: "while" • cond "do" stmt

    "not"         shift, and go to state 44
    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 49

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 52
    cond       go to state 53


State 28

   35 stmt: "if" • cond "then" stmt "else" stmt
   36     | "if" • cond "then" stmt

    "not"         shift, and go to state 44
    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 49

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 52
    cond       go to state 54


State 29

   38 stmt: "return" • ';'
   39     | "return" • expr ';'

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55
    ';'           shift, and go to state 56

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 57


State 30

   43 func_call: T_id • '(' expr_list ')'
   48 l_value: T_id •

    '('  shift, and go to state 58

    $default  reduce using rule 48 (l_value)


State 31

   49 l_value: T_string_lit •

    $default  reduce using rule 49 (l_value)


State 32

   31 stmt: ';' •

    $default  reduce using rule 31 (stmt)


State 33

   40 block: '{' stmt_list '}' •

    $default  reduce using rule 40 (block)


State 34

   42 stmt_list: stmt_list stmt •

    $default  reduce using rule 42 (stmt_list)


State 35

   33 stmt: block •

    $default  reduce using rule 33 (stmt)


State 36

   34 stmt: func_call • ';'

    ';'  shift, and go to state 59


State 37

   32 stmt: l_value • "arr" expr ';'
   50 l_value: l_value • '[' expr ']'

    "arr"  shift, and go to state 60
    '['    shift, and go to state 61


State 38

    5 header: "fun" T_id '(' fpar_def_list ')' ':' • ret_type

    "int"      shift, and go to state 62
    "char"     shift, and go to state 63
    "nothing"  shift, and go to state 64

    data_type  go to state 65
    ret_type   go to state 66


State 39

   10 fpar_def: "ref" id_rest • T_id ':' fpar_type
   13 id_rest: id_rest • T_id ','

    T_id  shift, and go to state 67


State 40

    9 fpar_def_rest: fpar_def_rest fpar_def ';' •

    $default  reduce using rule 9 (fpar_def_rest)


State 41

   11 fpar_def: id_rest T_id • ':' fpar_type
   13 id_rest: id_rest T_id • ','

    ':'  shift, and go to state 68
    ','  shift, and go to state 43


State 42

   30 var_def: "var" id_rest T_id ':' • type ';'

    "int"   shift, and go to state 62
    "char"  shift, and go to state 63

    data_type  go to state 69
    type       go to state 70


State 43

   13 id_rest: id_rest T_id ',' •

    $default  reduce using rule 13 (id_rest)


State 44

   64 cond: "not" • cond

    "not"         shift, and go to state 44
    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 49

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 52
    cond       go to state 71


State 45

   51 expr: T_int_lit •

    $default  reduce using rule 51 (expr)


State 46

   52 expr: T_char_lit •

    $default  reduce using rule 52 (expr)


State 47

   56 expr: '+' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 72


State 48

   57 expr: '-' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 73


State 49

   54 expr: '(' • expr ')'
   63 cond: '(' • cond ')'

    "not"         shift, and go to state 44
    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 49

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 74
    cond       go to state 75


State 50

   55 expr: func_call •

    $default  reduce using rule 55 (expr)


State 51

   50 l_value: l_value • '[' expr ']'
   53 expr: l_value •

    '['  shift, and go to state 61

    $default  reduce using rule 53 (expr)


State 52

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   67 cond: expr • '=' expr
   68     | expr • '#' expr
   69     | expr • '<' expr
   70     | expr • '>' expr
   71     | expr • "leq" expr
   72     | expr • "geq" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    "leq"  shift, and go to state 78
    "geq"  shift, and go to state 79
    '='    shift, and go to state 80
    '#'    shift, and go to state 81
    '>'    shift, and go to state 82
    '<'    shift, and go to state 83
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86


State 53

   37 stmt: "while" cond • "do" stmt
   65 cond: cond • "and" cond
   66     | cond • "or" cond

    "and"  shift, and go to state 87
    "do"   shift, and go to state 88
    "or"   shift, and go to state 89


State 54

   35 stmt: "if" cond • "then" stmt "else" stmt
   36     | "if" cond • "then" stmt
   65 cond: cond • "and" cond
   66     | cond • "or" cond

    "and"   shift, and go to state 87
    "then"  shift, and go to state 90
    "or"    shift, and go to state 89


State 55

   54 expr: '(' • expr ')'

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 91


State 56

   38 stmt: "return" ';' •

    $default  reduce using rule 38 (stmt)


State 57

   39 stmt: "return" expr • ';'
   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    ';'    shift, and go to state 92


State 58

   43 func_call: T_id '(' • expr_list ')'

    ')'       reduce using rule 44 (expr_list)
    $default  reduce using rule 46 (expr_rest)

    expr_list  go to state 93
    expr_rest  go to state 94


State 59

   34 stmt: func_call ';' •

    $default  reduce using rule 34 (stmt)


State 60

   32 stmt: l_value "arr" • expr ';'

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 95


State 61

   50 l_value: l_value '[' • expr ']'

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 96


State 62

   14 data_type: "int" •

    $default  reduce using rule 14 (data_type)


State 63

   15 data_type: "char" •

    $default  reduce using rule 15 (data_type)


State 64

   20 ret_type: "nothing" •

    $default  reduce using rule 20 (ret_type)


State 65

   19 ret_type: data_type •

    $default  reduce using rule 19 (ret_type)


State 66

    5 header: "fun" T_id '(' fpar_def_list ')' ':' ret_type •

    $default  reduce using rule 5 (header)


State 67

   10 fpar_def: "ref" id_rest T_id • ':' fpar_type
   13 id_rest: id_rest T_id • ','

    ':'  shift, and go to state 97
    ','  shift, and go to state 43


State 68

   11 fpar_def: id_rest T_id ':' • fpar_type

    "int"   shift, and go to state 62
    "char"  shift, and go to state 63

    data_type  go to state 98
    fpar_type  go to state 99


State 69

   16 type: data_type • int_const_bracket_list_var

    $default  reduce using rule 17 (int_const_bracket_list_var)

    int_const_bracket_list_var  go to state 100


State 70

   30 var_def: "var" id_rest T_id ':' type • ';'

    ';'  shift, and go to state 101


State 71

   64 cond: "not" cond •
   65     | cond • "and" cond
   66     | cond • "or" cond

    $default  reduce using rule 64 (cond)


State 72

   56 expr: '+' expr •
   58     | expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    $default  reduce using rule 56 (expr)


State 73

   57 expr: '-' expr •
   58     | expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    $default  reduce using rule 57 (expr)


State 74

   54 expr: '(' expr • ')'
   58     | expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   67 cond: expr • '=' expr
   68     | expr • '#' expr
   69     | expr • '<' expr
   70     | expr • '>' expr
   71     | expr • "leq" expr
   72     | expr • "geq" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    "leq"  shift, and go to state 78
    "geq"  shift, and go to state 79
    '='    shift, and go to state 80
    '#'    shift, and go to state 81
    '>'    shift, and go to state 82
    '<'    shift, and go to state 83
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    ')'    shift, and go to state 102


State 75

   63 cond: '(' cond • ')'
   65     | cond • "and" cond
   66     | cond • "or" cond

    "and"  shift, and go to state 87
    "or"   shift, and go to state 89
    ')'    shift, and go to state 103


State 76

   62 expr: expr "mod" • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 104


State 77

   61 expr: expr "div" • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 105


State 78

   71 cond: expr "leq" • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 106


State 79

   72 cond: expr "geq" • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 107


State 80

   67 cond: expr '=' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 108


State 81

   68 cond: expr '#' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 109


State 82

   70 cond: expr '>' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 110


State 83

   69 cond: expr '<' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 111


State 84

   58 expr: expr '+' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 112


State 85

   59 expr: expr '-' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 113


State 86

   60 expr: expr '*' • expr

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 114


State 87

   65 cond: cond "and" • cond

    "not"         shift, and go to state 44
    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 49

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 52
    cond       go to state 115


State 88

   37 stmt: "while" cond "do" • stmt

    "while"       shift, and go to state 27
    "if"          shift, and go to state 28
    "return"      shift, and go to state 29
    T_id          shift, and go to state 30
    T_string_lit  shift, and go to state 31
    ';'           shift, and go to state 32
    '{'           shift, and go to state 10

    stmt       go to state 116
    block      go to state 35
    func_call  go to state 36
    l_value    go to state 37


State 89

   66 cond: cond "or" • cond

    "not"         shift, and go to state 44
    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 49

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 52
    cond       go to state 117


State 90

   35 stmt: "if" cond "then" • stmt "else" stmt
   36     | "if" cond "then" • stmt

    "while"       shift, and go to state 27
    "if"          shift, and go to state 28
    "return"      shift, and go to state 29
    T_id          shift, and go to state 30
    T_string_lit  shift, and go to state 31
    ';'           shift, and go to state 32
    '{'           shift, and go to state 10

    stmt       go to state 118
    block      go to state 35
    func_call  go to state 36
    l_value    go to state 37


State 91

   54 expr: '(' expr • ')'
   58     | expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    ')'    shift, and go to state 102


State 92

   39 stmt: "return" expr ';' •

    $default  reduce using rule 39 (stmt)


State 93

   43 func_call: T_id '(' expr_list • ')'

    ')'  shift, and go to state 119


State 94

   45 expr_list: expr_rest • expr
   47 expr_rest: expr_rest • expr ','

    T_id          shift, and go to state 30
    T_int_lit     shift, and go to state 45
    T_char_lit    shift, and go to state 46
    T_string_lit  shift, and go to state 31
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '('           shift, and go to state 55

    func_call  go to state 50
    l_value    go to state 51
    expr       go to state 120


State 95

   32 stmt: l_value "arr" expr • ';'
   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    ';'    shift, and go to state 121


State 96

   50 l_value: l_value '[' expr • ']'
   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    ']'    shift, and go to state 122


State 97

   10 fpar_def: "ref" id_rest T_id ':' • fpar_type

    "int"   shift, and go to state 62
    "char"  shift, and go to state 63

    data_type  go to state 98
    fpar_type  go to state 123


State 98

   24 fpar_type: data_type •
   25          | data_type • '[' int_const_bracket_list

    '['  shift, and go to state 124

    $default  reduce using rule 24 (fpar_type)


State 99

   11 fpar_def: id_rest T_id ':' fpar_type •

    $default  reduce using rule 11 (fpar_def)


State 100

   16 type: data_type int_const_bracket_list_var •
   18 int_const_bracket_list_var: int_const_bracket_list_var • '[' T_int_lit ']'

    '['  shift, and go to state 125

    $default  reduce using rule 16 (type)


State 101

   30 var_def: "var" id_rest T_id ':' type ';' •

    $default  reduce using rule 30 (var_def)


State 102

   54 expr: '(' expr ')' •

    $default  reduce using rule 54 (expr)


State 103

   63 cond: '(' cond ')' •

    $default  reduce using rule 63 (cond)


State 104

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   62     | expr "mod" expr •

    $default  reduce using rule 62 (expr)


State 105

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   61     | expr "div" expr •
   62     | expr • "mod" expr

    $default  reduce using rule 61 (expr)


State 106

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   71 cond: expr "leq" expr •

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86

    $default  reduce using rule 71 (cond)


State 107

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   72 cond: expr "geq" expr •

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86

    $default  reduce using rule 72 (cond)


State 108

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   67 cond: expr '=' expr •

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86

    $default  reduce using rule 67 (cond)


State 109

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   68 cond: expr '#' expr •

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86

    $default  reduce using rule 68 (cond)


State 110

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   70 cond: expr '>' expr •

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86

    $default  reduce using rule 70 (cond)


State 111

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr
   69 cond: expr '<' expr •

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86

    $default  reduce using rule 69 (cond)


State 112

   58 expr: expr • '+' expr
   58     | expr '+' expr •
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '*'    shift, and go to state 86

    $default  reduce using rule 58 (expr)


State 113

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   59     | expr '-' expr •
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '*'    shift, and go to state 86

    $default  reduce using rule 59 (expr)


State 114

   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   60     | expr '*' expr •
   61     | expr • "div" expr
   62     | expr • "mod" expr

    $default  reduce using rule 60 (expr)


State 115

   65 cond: cond • "and" cond
   65     | cond "and" cond •
   66     | cond • "or" cond

    $default  reduce using rule 65 (cond)


State 116

   37 stmt: "while" cond "do" stmt •

    $default  reduce using rule 37 (stmt)


State 117

   65 cond: cond • "and" cond
   66     | cond • "or" cond
   66     | cond "or" cond •

    "and"  shift, and go to state 87

    $default  reduce using rule 66 (cond)


State 118

   35 stmt: "if" cond "then" stmt • "else" stmt
   36     | "if" cond "then" stmt •

    "else"  shift, and go to state 126

    "else"    [reduce using rule 36 (stmt)]
    $default  reduce using rule 36 (stmt)

    shift/reduce conflict on token "else":
       36 stmt: "if" cond "then" stmt •
       35 stmt: "if" cond "then" stmt • "else" stmt
      Example: "if" cond "then" "if" cond "then" stmt • "else" stmt
      Shift derivation
        stmt
        ↳ 36: "if" cond "then" stmt
                               ↳ 35: "if" cond "then" stmt • "else" stmt
      Reduce derivation
        stmt
        ↳ 35: "if" cond "then" stmt                          "else" stmt
                               ↳ 36: "if" cond "then" stmt •



State 119

   43 func_call: T_id '(' expr_list ')' •

    $default  reduce using rule 43 (func_call)


State 120

   45 expr_list: expr_rest expr •
   47 expr_rest: expr_rest expr • ','
   58 expr: expr • '+' expr
   59     | expr • '-' expr
   60     | expr • '*' expr
   61     | expr • "div" expr
   62     | expr • "mod" expr

    "mod"  shift, and go to state 76
    "div"  shift, and go to state 77
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    ','    shift, and go to state 127

    $default  reduce using rule 45 (expr_list)


State 121

   32 stmt: l_value "arr" expr ';' •

    $default  reduce using rule 32 (stmt)


State 122

   50 l_value: l_value '[' expr ']' •

    $default  reduce using rule 50 (l_value)


State 123

   10 fpar_def: "ref" id_rest T_id ':' fpar_type •

    $default  reduce using rule 10 (fpar_def)


State 124

   25 fpar_type: data_type '[' • int_const_bracket_list

    T_int_lit  shift, and go to state 128
    ']'        shift, and go to state 129

    int_const_bracket_list  go to state 130


State 125

   18 int_const_bracket_list_var: int_const_bracket_list_var '[' • T_int_lit ']'

    T_int_lit  shift, and go to state 131


State 126

   35 stmt: "if" cond "then" stmt "else" • stmt

    "while"       shift, and go to state 27
    "if"          shift, and go to state 28
    "return"      shift, and go to state 29
    T_id          shift, and go to state 30
    T_string_lit  shift, and go to state 31
    ';'           shift, and go to state 32
    '{'           shift, and go to state 10

    stmt       go to state 132
    block      go to state 35
    func_call  go to state 36
    l_value    go to state 37


State 127

   47 expr_rest: expr_rest expr ',' •

    $default  reduce using rule 47 (expr_rest)


State 128

   22 int_const_bracket_list: T_int_lit • ']'

    ']'  shift, and go to state 133


State 129

   21 int_const_bracket_list: ']' •

    $default  reduce using rule 21 (int_const_bracket_list)


State 130

   23 int_const_bracket_list: int_const_bracket_list • '[' T_int_lit ']'
   25 fpar_type: data_type '[' int_const_bracket_list •

    '['  shift, and go to state 134

    $default  reduce using rule 25 (fpar_type)


State 131

   18 int_const_bracket_list_var: int_const_bracket_list_var '[' T_int_lit • ']'

    ']'  shift, and go to state 135


State 132

   35 stmt: "if" cond "then" stmt "else" stmt •

    $default  reduce using rule 35 (stmt)


State 133

   22 int_const_bracket_list: T_int_lit ']' •

    $default  reduce using rule 22 (int_const_bracket_list)


State 134

   23 int_const_bracket_list: int_const_bracket_list '[' • T_int_lit ']'

    T_int_lit  shift, and go to state 136


State 135

   18 int_const_bracket_list_var: int_const_bracket_list_var '[' T_int_lit ']' •

    $default  reduce using rule 18 (int_const_bracket_list_var)


State 136

   23 int_const_bracket_list: int_const_bracket_list '[' T_int_lit • ']'

    ']'  shift, and go to state 137


State 137

   23 int_const_bracket_list: int_const_bracket_list '[' T_int_lit ']' •

    $default  reduce using rule 23 (int_const_bracket_list)
